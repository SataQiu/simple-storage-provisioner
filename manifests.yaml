apiVersion: v1
kind: Namespace
metadata:
  name: my-storage-provisioner

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-storage-provisioner-service-account
  namespace: my-storage-provisioner

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-storage-provisioner-role
  namespace: my-storage-provisioner
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-storage-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["nodes", "persistentvolumeclaims", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-storage-provisioner-bind
  namespace: my-storage-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-storage-provisioner-role
subjects:
  - kind: ServiceAccount
    name: my-storage-provisioner-service-account
    namespace: my-storage-provisioner

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-storage-provisioner-bind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-storage-provisioner-role
subjects:
  - kind: ServiceAccount
    name: my-storage-provisioner-service-account
    namespace: my-storage-provisioner

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-storage-provisioner
  namespace: my-storage-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-storage-provisioner
  template:
    metadata:
      labels:
        app: my-storage-provisioner
    spec:
      serviceAccountName: my-storage-provisioner-service-account
      containers:
        - name: my-storage-provisioner
          image: shidaqiu/my-storage-provisioner:v0.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-storage
provisioner: example.io/my-storage-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-storage-fast
provisioner: example.io/my-storage-provisioner
volumeBindingMode: Immediate
reclaimPolicy: Delete
